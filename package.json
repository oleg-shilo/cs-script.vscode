{
  "name": "cs-script",
  "displayName": "CS-Script",
  "description": "Execution, debugging and editing C# code that targets .NET (.NET SDK is required)",
  "version": "2.3.0",
  "license": "MIT",
  "publisher": "oleg-shilo",
  "icon": "images/css_logo.png",
  "engines": {
    "vscode": "^1.52.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Other"
  ],
  "keywords": [
    "C#",
    "C# script",
    "CS-Script",
    "scripting",
    "debugging"
  ],
  "bugs": {
    "url": "https://github.com/oleg-shilo/cs-script.vscode/issues",
    "email": "oshilo@gmail.com"
  },
  "homepage": "https://github.com/oleg-shilo/cs-script.vscode/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/oleg-shilo/cs-script.vscode.git"
  },
  "activationEvents": [
    "onLanguage:csharp",
    "onLanguage:vb",
    "onLanguage:typescript",
    "workspaceContains:script.csproj"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "cs-script",
          "name": "CS-Script - Active"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "CS-Script configuration",
      "properties": {
        "cs-script.single_click_navigate_from_output": {
          "type": "boolean",
          "default": true,
          "description": "Allow navigation on a single click (without any keyboard modifiers) on the output panel text that is a file path with the location (e.g. \"C:/temp/script.cs(10,20): Error: invalid symbol\")."
        },
        "cs-script.enable_code_formatting": {
          "type": "boolean",
          "default": true,
          "description": "Enables code formatting based on Roslyn default formatting style provided by this extension. This can be useful if an alternative formatting technique is preferred."
        },
        "cs-script.disableIntegrationWarning": {
          "type": "boolean",
          "default": false,
          "description": "Disables CS-Script tools integration warning."
        },
        "cs-script.select_line_on_navigate_from_output": {
          "type": "boolean",
          "default": true,
          "description": "Select whole location line on navigation from the output panel. Related to 'cs-script.single_click_navigate_from_output'"
        },
        "cs-script.decorate_file_links_in_output": {
          "type": "boolean",
          "default": true,
          "description": "Decorate file locations (e.g. error info) in the output panel as document links (underlined)."
        },
        "cs-script.fallback_to_launch_json": {
          "type": "boolean",
          "default": false,
          "description": "Fallback to workspace launch.json based debugging (first found configuration) when CS-Script debugging is triggered while workspace is loaded. This setting has no effect when `suppress_script_debug_for_workspaces` is enabled."
        },
        "cs-script.suppress_script_debug_for_workspaces": {
          "type": "boolean",
          "default": false,
          "description": "Allows staring CS-Script specific debugging while workspace is loaded and launch.json based debugging is available. By default CS-Script debugging is only enabled for C# files (but not folders) loaded in VSCode. If this property is enabled you can use both CS-Script and workspace debugging. Enabling this setting effectively disables `fallback_to_launch_json`"
        },
        "cs-script.suppress_script_intellisense_for_workspaces": {
          "type": "boolean",
          "default": false,
          "description": "Allows CS-Script specific autocompletion and other intellisense services. YOu amy want to disable it if you see it interfering with VSCode native services (e.g. traditional C# projects)."
        },
        "cs-script.engine.cscs_path": {
          "type": "string",
          "default": "<default>",
          "description": "Location of the script engine. `<default>` maps the path to the engine embedded in the extension."
        },
        "cs-script.engine.syntaxer_path": {
          "type": "string",
          "default": "<default>",
          "description": "Location of the CS-Syntaxer, which is a syntax provider for CS-Script. `<default>` maps the path to the provider embedded in the extension."
        },
        "cs-script.engine.syntaxer_port": {
          "type": "number",
          "default": 18003,
          "description": "TCP port number of the CS-Syntaxer, which is a syntax provider for CS-Script."
        },
        "cs-script.extra_args_for_debug": {
          "type": "string",
          "default": "",
          "description": "Extra arguments to be always passed to the script engine for debugging session only (e.g. `-co:/debug:embedded` for debugger integration troubleshooting). Note, one of the debugger options is known to be invalid so it will always be removed from the setting value. It is `-co:/debug:pdbonly`."
        },
        "cs-script.extra_args": {
          "type": "string",
          "default": "",
          "description": "Extra arguments to be always passed to the script engine (e.g. `-cd` for treating script as a dll source file)."
        }
      }
    },
    "commands": [
      {
        "command": "cs-script.refresh_tree",
        "title": "Refresh active project tree",
        "icon": {
          "light": "./images/icons/refresh.light.svg",
          "dark": "./images/icons/refresh.svg"
        }
      },
      {
        "command": "cs-script.show_tree_data",
        "title": "Show project info in Output panel",
        "icon": {
          "light": "./images/icons/document.light.svg",
          "dark": "./images/icons/document.svg"
        }
      },
      {
        "command": "cs-script.debug",
        "title": "CS-Script: Debug",
        "icon": {
          "light": "./images/icons/debug.light.svg",
          "dark": "./images/icons/debug.svg"
        }
      },
      {
        "command": "cs-script.run",
        "title": "CS-Script: Run",
        "icon": {
          "light": "./images/icons/run.light.svg",
          "dark": "./images/icons/run.svg"
        }
      },
      {
        "command": "cs-script.reset_busy",
        "title": "CS-Script: Reset busy status"
      },
      {
        "command": "cs-script.integrate",
        "title": "CS-Script: Integrate wth CS-Script tools"
      },
      {
        "command": "cs-script.run_in_terminal",
        "title": "CS-Script: Run in terminal",
        "icon": {
          "light": "./images/icons/run.terminal.light.svg",
          "dark": "./images/icons/run.terminal.svg"
        }
      },
      {
        "command": "cs-script.print_project",
        "title": "CS-Script: Show project"
      },
      {
        "command": "cs-script.load_project",
        "title": "CS-Script: Load project",
        "icon": {
          "light": "./images/icons/load.light.svg",
          "dark": "./images/icons/load.svg"
        }
      },
      {
        "command": "cs-script.css_config",
        "title": "CS-Script: Engine Settings"
      },
      {
        "command": "cs-script.new_script",
        "title": "CS-Script: New C# script"
      },
      {
        "command": "cs-script.build_exe",
        "title": "CS-Script: Build exe"
      },
      {
        "command": "cs-script.find_references",
        "title": "Find all references (classic)"
      },
      {
        "command": "cs-script.check",
        "title": "CS-Script: Check syntax",
        "icon": {
          "light": "./images/icons/check.light.svg",
          "dark": "./images/icons/check.svg"
        }
      },
      {
        "command": "cs-script.engine_help",
        "title": "CS-Script: Help"
      },
      {
        "command": "cs-script.about",
        "title": "CS-Script: About"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "cs-script.show_tree_data",
          "when": "view == cs-script",
          "group": "navigation"
        },
        {
          "command": "cs-script.refresh_tree",
          "when": "view == cs-script",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cs-script.show_tree_data",
          "when": "view == cs-script"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.run",
          "group": "navigation@1"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.run",
          "group": "navigation@1"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.debug",
          "group": "navigation@2"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.debug",
          "group": "navigation@2"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.run_in_terminal",
          "group": "navigation@2"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.run_in_terminal",
          "group": "navigation@2"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.check",
          "group": "navigation@3"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.check",
          "group": "navigation@3"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.load_project",
          "group": "navigation@4"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.print_project",
          "group": "cs-script.2"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.print_project",
          "group": "cs-script.2"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.new_script",
          "group": "cs-script.2"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.build_exe",
          "group": "cs-script.2"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.build_exe",
          "group": "cs-script.2"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.css_config",
          "group": "cs-script.3"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.about",
          "group": "cs-script.3"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.about",
          "group": "cs-script.3"
        }
      ],
      "editor/context": [
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.find_references",
          "group": "cs-script.0"
        },
        {
          "when": "resourceLangId == vb",
          "command": "cs-script.find_references",
          "group": "cs-script.0"
        },
        {
          "when": "resourceLangId == typescript",
          "command": "cs-script.find_references",
          "group": "cs-script.0"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.run",
          "group": "cs-script.0"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.debug",
          "group": "cs-script.0"
        },
        {
          "when": "resourceLangId == csharp",
          "command": "cs-script.check",
          "group": "cs-script.0"
        }
      ]
    },
    "keybindings": [
      {
        "key": "alt+f5",
        "command": "cs-script.debug",
        "when": "!inDebugMode"
      },
      {
        "key": "ctrl+f5",
        "command": "cs-script.run"
      },
      {
        "key": "f7",
        "command": "cs-script.check"
      },
      {
        "key": "ctrl+f12",
        "command": "cs-script.find_references"
      },
      {
        "key": "ctrl+f7",
        "command": "cs-script.load_project"
      },
      {
        "key": "shift+f7",
        "command": "cs-script.print_project"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "fs-extra": "^9.1.0",
    "mkdirp": "^1.0.4"
  },
  "devDependencies": {
    "@types/fs-extra": "^9.0.6",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^4.9.0",
    "@typescript-eslint/parser": "^4.9.0",
    "eslint": "^7.15.0",
    "glob": "^7.1.6",
    "mocha": "^10.4.0",
    "typescript": "^4.1.2",
    "vscode-test": "^1.4.1"
  }
}